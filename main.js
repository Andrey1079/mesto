(()=>{"use strict";var t={formSelector:".popup__form",inputSelector:".popup__form-item",submitButtonSelector:".popup__submit-button",inactiveButtonClass:"popup__submit-button_disabled",errorClass:"popup__form-item-error_visible",inputErrorClass:".popup__form-item-error"},e=document.querySelector(".popup-edit-profile"),r=document.querySelector(".profile__edit-profile-button"),n=e.querySelector(".popup__form_type_edit-profile"),o={},i=document.querySelector(".popup-add-photo"),u=document.querySelector(".profile__add-photo-button"),s=i.querySelector(".popup__form_type_add-photo"),a=document.querySelector(".popup-edit-avatar"),c=document.querySelector(".profile__avatar-edit-button"),l=a.querySelector(".popup__form_type_edit-avatar"),f=document.querySelector(".popup__error-message");function p(t){return p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},p(t)}function y(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==p(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==p(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===p(o)?o:String(o)),n)}var o}var h=function(){function t(e,r,n,o,i){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._galleryItemTemplate=document.querySelector(r).content.cloneNode(!0),this._galeryImage=this._galleryItemTemplate.querySelector(".gallery__image"),this._galeryCaption=this._galleryItemTemplate.querySelector(".gallery__city"),this._gallerylikeButton=this._galleryItemTemplate.querySelector(".gallery__like-button"),this._galleryTrashButton=this._galleryItemTemplate.querySelector(".gallery__bin-button"),this._galleryItem=this._galleryItemTemplate.querySelector(".gallery__item"),this._like_counter=this._galleryItemTemplate.querySelector(".gallery__like-counter"),this._likesArray=e.likes,this._likesQuantity=e.likes.length,this._cardId=e._id,this._galleryItemTemplate.querySelector(".gallery__item"),this._caption=e.name,this._url=e.link,this._cardOwner=e.owner.name,this.openPopupFunc=n,this.openPopupConfirm=o,this._likesToggleFunc=i}var e,r;return e=t,(r=[{key:"setCard",value:function(){return this._checkOwnerCard(this._cardOwner),this.setLikes(this._likesArray),this._setEventLIsteners(),this._galeryImage.src=this._url,this._galeryImage.alt=this._caption,this._galeryCaption.textContent=this._caption,this._galleryItemTemplate}},{key:"_setEventLIsteners",value:function(){var t=this;this._gallerylikeButton.addEventListener("click",(function(e){return t._likesToggleFunc(t._cardId,t._likesArray)})),this._galleryTrashButton.addEventListener("click",(function(e){t._deleteGalleryItem(t._galleryItemTemplate)})),this._galeryImage.addEventListener("click",(function(e){t.openPopupFunc(t._galeryImage.src,t._galeryImage.alt)}))}},{key:"_deleteGalleryItem",value:function(){this.openPopupConfirm(this._cardId,this._galleryItem)}},{key:"_checkOwnerCard",value:function(t){t!==o.name&&this._galleryTrashButton.classList.add("gallery__bin-button_invisible")}},{key:"setLikes",value:function(t){t.some((function(t){return t.name===o.name}))?this._gallerylikeButton.classList.add("gallery__like-button_active"):this._gallerylikeButton.classList.remove("gallery__like-button_active"),this._like_counter.textContent=t.length,this._likesArray=t}}])&&y(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function b(t){return b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},b(t)}function m(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==b(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==b(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===b(o)?o:String(o)),n)}var o}var v=function(){function t(e,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._formElement=r,this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._errorClass=e.errorClass,this._inputErrorClass=e.inputErrorClass,this._inputs=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._submitButton=this._formElement.querySelector(this._submitButtonSelector),this._errorMessages=Array.from(this._formElement.querySelectorAll(this._inputErrorClass))}var e,r;return e=t,(r=[{key:"enableValidation",value:function(){this._setEventListener()}},{key:"_setEventListener",value:function(){var t=this;this._toggleButtonState(),this._inputs.forEach((function(e){t._checkInputValidity(e),addEventListener("input",(function(){t._checkInputValidity(e),t._toggleButtonState()}))}))}},{key:"_checkInputValidity",value:function(t){var e=this._formElement.querySelector(".".concat(t.id,"-error"));t.validity.valid?this._hideInputError(e):this._showInputError(e,t.validationMessage)}},{key:"_showInputError",value:function(t,e){t.textContent=e,t.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(t){t.classList.remove(this._errorClass),t.textContent=""}},{key:"_disableSubmitButton",value:function(t,e){t.classList.add(e),t.setAttribute("disabled","disabled")}},{key:"_enableSubmitButton",value:function(t,e){t.classList.remove(e),t.removeAttribute("disabled","disabled")}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput(this._inputs)?this._disableSubmitButton(this._submitButton,this._inactiveButtonClass):this._enableSubmitButton(this._submitButton,this._inactiveButtonClass)}},{key:"_hasInvalidInput",value:function(){return this._inputs.some((function(t){return!t.validity.valid}))}},{key:"resetInputsErrors",value:function(){var t=this;this._toggleButtonState(),this._errorMessages.forEach((function(e){t._hideInputError(e)}))}}])&&m(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function _(t){return _="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},_(t)}function d(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==_(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==_(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===_(o)?o:String(o)),n)}var o}var g=function(){function t(e,r){var n=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._renderer=n,this._container=document.querySelector(r)}var e,r;return e=t,(r=[{key:"addItem",value:function(t){this._container.prepend(t)}},{key:"renderItemsFromArray",value:function(t){var e=this;t.forEach((function(t){e.addItem(e._renderer(t))}))}}])&&d(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function S(t){return S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},S(t)}function w(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,j(n.key),n)}}function k(t,e,r){return(e=j(e))in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function j(t){var e=function(t,e){if("object"!==S(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==S(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===S(e)?e:String(e)}var O=function(){function t(e){var r=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),k(this,"_handleEscClose",(function(t){"Escape"===t.key&&r.close()})),k(this,"_closePopupByClickOverlay",(function(t){t.target===t.currentTarget&&r.close()})),this._popup=document.querySelector(e),this._popupCloseButton=this._popup.querySelector(".popup__close-button ")}var e,r;return e=t,(r=[{key:"open",value:function(){this._popup.classList.add("popup_visible"),this._popup.addEventListener("mousedown",this._closePopupByClickOverlay),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_visible"),this._popup.removeEventListener("mousedown",this._closePopupByClickOverlay),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){this._popupCloseButton.addEventListener("click",this.close.bind(this))}}])&&w(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function E(t){return E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},E(t)}function P(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==E(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==E(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===E(o)?o:String(o)),n)}var o}function I(){return I="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var n=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=T(t)););return t}(t,e);if(n){var o=Object.getOwnPropertyDescriptor(n,e);return o.get?o.get.call(arguments.length<3?t:r):o.value}},I.apply(this,arguments)}function C(t,e){return C=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},C(t,e)}function T(t){return T=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},T(t)}var L=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&C(t,e)}(u,t);var e,r,n,o,i=(n=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=T(n);if(o){var r=T(this).constructor;t=Reflect.construct(e,arguments,r)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===E(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(e=i.call(this,t))._image=e._popup.querySelector(".popup__img"),e._caption=e._popup.querySelector(".popup__place-name-of-big-photo"),e}return e=u,(r=[{key:"open",value:function(t){this._image.src=t.src,this._image.alt=t.alt,this._caption.textContent=t.alt,I(T(u.prototype),"open",this).call(this)}}])&&P(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),u}(O);function B(t){return B="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},B(t)}function q(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==B(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==B(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===B(o)?o:String(o)),n)}var o}function F(){return F="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var n=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=A(t)););return t}(t,e);if(n){var o=Object.getOwnPropertyDescriptor(n,e);return o.get?o.get.call(arguments.length<3?t:r):o.value}},F.apply(this,arguments)}function R(t,e){return R=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},R(t,e)}function A(t){return A=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},A(t)}var U=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&R(t,e)}(u,t);var e,r,n,o,i=(n=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=A(n);if(o){var r=A(this).constructor;t=Reflect.construct(e,arguments,r)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===B(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t,e){var r,n=t.submitFunc;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(r=i.call(this,e))._submitFunc=n,r._form=r._popup.querySelector(".popup__form"),r._inputs=r._form.querySelectorAll(".popup__form-item"),r}return e=u,(r=[{key:"_getInputValues",value:function(){var t=this;return this._formValues={},this._inputs=Array.from(this._inputs),this._inputs.forEach((function(e){return t._formValues[e.name]=e.value})),this._formValues}},{key:"setInputValues",value:function(t){this._inputs.forEach((function(e){e.value=t[e.name]}))}},{key:"setEventListeners",value:function(){var t=this;F(A(u.prototype),"setEventListeners",this).call(this),this._SubmitCallback=function(e){e.preventDefault(),t._submitFunc(t._getInputValues.bind(t)()),t.close()},this._form.addEventListener("submit",this._SubmitCallback)}},{key:"close",value:function(){this._form.reset(),F(A(u.prototype),"close",this).call(this)}}])&&q(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),u}(O);function x(t){return x="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},x(t)}function D(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==x(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==x(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===x(o)?o:String(o)),n)}var o}var V=function(){function t(e){var r=e.userDataSelectors;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._userNameField=document.querySelector(r.userNameSelector),this._userProfessionField=document.querySelector(r.userProfessionSelector),this._userAvatar=document.querySelector(r.userAvatarSelector)}var e,r;return e=t,r=[{key:"getUserInfo",value:function(){return this._userDataForInputs={},this._userDataForInputs.name=this._userNameField.textContent,this._userDataForInputs.profession=this._userProfessionField.textContent,this._userDataForInputs}},{key:"setUserInfo",value:function(t){this._userNameField.textContent=t.name,this._userProfessionField.textContent=t.profession}},{key:"setAvatar",value:function(t){this._userAvatar.style.backgroundImage="url(".concat(t.url,")")}}],r&&D(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function M(t){return M="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},M(t)}function N(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==M(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==M(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===M(o)?o:String(o)),n)}var o}function G(){return G="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var n=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=H(t)););return t}(t,e);if(n){var o=Object.getOwnPropertyDescriptor(n,e);return o.get?o.get.call(arguments.length<3?t:r):o.value}},G.apply(this,arguments)}function J(t,e){return J=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},J(t,e)}function H(t){return H=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},H(t)}var z=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&J(t,e)}(u,t);var e,r,n,o,i=(n=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=H(n);if(o){var r=H(this).constructor;t=Reflect.construct(e,arguments,r)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===M(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t,e){var r,n=e.submitFunc;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(r=i.call(this,t))._submitFunc=n,r._submitButton=r._popup.querySelector(".popup__submit-button"),r}return e=u,(r=[{key:"open",value:function(t,e){var r=this;this._submitCallback=function(n){r._submitFunc(t),r.close(),e.remove(),e=null},this._submitButton.addEventListener("click",this._submitCallback),G(H(u.prototype),"open",this).call(this)}}])&&N(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),u}(O);function Q(t){return Q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},Q(t)}function K(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==Q(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==Q(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===Q(o)?o:String(o)),n)}var o}var W=function(){function t(e,r){var n=r.showErrFunc;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._showErrorMessasge=n,this._baseUrl=e.baseUrl,this._settingsObj={},this._settingsObj.method="GET",this._settingsObj.headers=e.headers}var e,r;return e=t,r=[{key:"getUserInfo",value:function(){var t=this;return fetch("".concat(this._baseUrl,"/users/me"),this._settingsObj).then((function(e){return e.ok?e.json():(t._showErrorMessasge("Ошибка: ".concat(e.status)),Promise.reject("Ошибка: ".concat(e.status)))}))}},{key:"getInitialCards",value:function(){var t=this;return fetch("".concat(this._baseUrl,"/cards"),this._settingsObj).then((function(e){return e.ok?e.json():(t._showErrorMessasge("Ошибка: ".concat(e.status)),Promise.reject("Ошибка: ".concat(e.status)))}))}},{key:"setUserInfo",value:function(t){var e=this;return this._settingsObj.method="PATCH",this._settingsObj.body=JSON.stringify({name:t.name,about:t.profession}),fetch("".concat(this._baseUrl,"/users/me"),this._settingsObj).then((function(t){return t.ok?t.json():(e._showErrorMessasge("Ошибка: ".concat(t.status)),Promise.reject("Ошибка: ".concat(t.status)))}))}},{key:"postNewCard",value:function(t){var e=this;return this._settingsObj.method="POST",this._settingsObj.body=JSON.stringify({name:t.name,link:t.link}),fetch("".concat(this._baseUrl,"/cards"),this._settingsObj).then((function(t){return t.ok?t.json():(e._showErrorMessasge("Ошибка: ".concat(t.status)),Promise.reject("Ошибка: ".concat(t.status)))}))}},{key:"deleteCard",value:function(t){var e=this;console.log(t),this._settingsObj.method="DELETE",fetch("".concat(this._baseUrl,"/cards/").concat(t),this._settingsObj).then((function(t){return t.ok?t.json():(e._showErrorMessasge("Ошибка: ".concat(t.status)),Promise.reject("Ошибка: ".concat(t.status)))}))}},{key:"likesToggle",value:function(t,e){var r=this;return this._settingsObj.method=e,fetch("".concat(this._baseUrl,"/cards/").concat(t,"/likes"),this._settingsObj).then((function(t){return t.ok?t.json():(r._showErrorMessasge("Ошибка: ".concat(t.status)),Promise.reject("Ошибка: ".concat(t.status)))}))}},{key:"patchAvatar",value:function(t){var e=this;return this._settingsObj.method="PATCH",this._settingsObj.body=JSON.stringify({avatar:t.url}),fetch("".concat(this._baseUrl,"/users/me/avatar"),this._settingsObj).then((function(t){return t.ok?t.json():(e._showErrorMessasge("Ошибка: ".concat(t.status)),Promise.reject("Ошибка: ".concat(t.status)))}))}}],r&&K(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function X(t){return o.name=t.name,o.profession=t.about,o.url=t.avatar,o.cohort=t.cohort,o.id=t._id,o}function Y(t,e){var r={};r.src=t,r.alt=e,rt.open(r)}function Z(t,e){lt.open(t,e)}function $(t,e){var r=this;e.some((function(t){return t.name===o.name}))?et.likesToggle(t,"DELETE").then((function(t){r.setLikes(t.likes)})):et.likesToggle(t,"PUT").then((function(t){r.setLikes(t.likes)}))}function tt(t){return new h(t,".gallery-item-template",Y,Z,$).setCard()}var et=new W({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-66",headers:{authorization:"02d169df-2e89-48d4-b456-d324fa7fca22","Content-Type":"application/json"}},{showErrFunc:function(t){f.textContent=t,ft.open()}});et.getInitialCards().then((function(t){ut.renderItemsFromArray(t.reverse())}));var rt=new L(".popup-big-photo");rt.setEventListeners();var nt=new v(t,s),ot=new v(t,n),it=new v(t,l);nt.enableValidation(),ot.enableValidation(),it.enableValidation();var ut=new g({renderer:tt},".gallery__list"),st=new U({submitFunc:function(t){return et.postNewCard(t).then((function(t){ut.addItem(tt(t))}))}},".popup-add-photo");st.setEventListeners();var at=new U({submitFunc:function(t){et.setUserInfo(t).then((function(t){X(t),pt.setUserInfo(o)}))}},".popup-edit-profile");at.setEventListeners();var ct=new U({submitFunc:function(t){et.patchAvatar(t).then((function(t){pt.setAvatar(X(t))}))}},".popup-edit-avatar");ct.setEventListeners();var lt=new z(".popup-confirm",{submitFunc:function(t){et.deleteCard(t)}});lt.setEventListeners();var ft=new O(".popup-error");ft.setEventListeners();var pt=new V({userDataSelectors:{userNameSelector:".profile__user-name",userProfessionSelector:".profile__user-profession",userAvatarSelector:".profile__avatar-edit-button"}});u.addEventListener("click",(function(t){nt.resetInputsErrors(),st.open()})),r.addEventListener("click",(function(){ot.resetInputsErrors(),at.setInputValues(pt.getUserInfo()),at.open()})),c.addEventListener("click",(function(t){t.preventDefault(),it.resetInputsErrors(),ct.open()})),et.getUserInfo().then((function(t){X(t),pt.setUserInfo(o),pt.setAvatar(o)}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,