(()=>{"use strict";function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(e)}function e(e,r){for(var n=0;n<r.length;n++){var o=r[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,r){if("object"!==t(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!==t(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===t(i)?i:String(i)),o)}var i}var r=function(){function t(e,r,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._galleryItemTemplate=document.querySelector(r).content.cloneNode(!0),this._galeryImage=this._galleryItemTemplate.querySelector(".gallery__image"),this._galeryCaption=this._galleryItemTemplate.querySelector(".gallery__city"),this._gallerylikeButton=this._galleryItemTemplate.querySelector(".gallery__like-button"),this._galleryTrashButton=this._galleryItemTemplate.querySelector(".gallery__bin-button"),this._galleryItem=this._galleryItemTemplate.querySelector(".gallery__item"),this._caption=e.name,this._url=e.link,this.openPopupFunc=n}var r,n;return r=t,(n=[{key:"setCard",value:function(){return this._setEventLIsteners(),this._galeryImage.src=this._url,this._galeryImage.alt=this._caption,this._galeryCaption.textContent=this._caption,this._galleryItemTemplate}},{key:"_setEventLIsteners",value:function(){var t=this;this._gallerylikeButton.addEventListener("click",(function(e){return t._changeLikeButton(t._gallerylikeButton)})),this._galleryTrashButton.addEventListener("click",(function(e){t._deleteGalleryItem(t._galleryItemTemplate)})),this._galeryImage.addEventListener("click",(function(e){t.openPopupFunc(t._galeryImage.src,t._galeryImage.alt)}))}},{key:"_changeLikeButton",value:function(){this._gallerylikeButton.classList.toggle("gallery__like-button_active")}},{key:"_deleteGalleryItem",value:function(){this._galleryItem.remove(),this._galleryItem=null}}])&&e(r.prototype,n),Object.defineProperty(r,"prototype",{writable:!1}),t}();function n(t){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},n(t)}function o(t,e){for(var r=0;r<e.length;r++){var o=e[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==n(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var o=r.call(t,"string");if("object"!==n(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===n(i)?i:String(i)),o)}var i}var i=function(){function t(e,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._formElement=r,this._formSelector=e.formSelector,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._errorClass=e.errorClass,this._inputErrorClass=e.inputErrorClass,this._inputs=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._submitButton=this._formElement.querySelector(this._submitButtonSelector),this._errorMessages=Array.from(this._formElement.querySelectorAll(this._inputErrorClass))}var e,r;return e=t,(r=[{key:"enableValidation",value:function(){this._setEventListener()}},{key:"_setEventListener",value:function(){var t=this;this._toggleButtonState(),this._inputs.forEach((function(e){t._checkInputValidity(e),addEventListener("input",(function(){t._checkInputValidity(e),t._toggleButtonState()}))}))}},{key:"_checkInputValidity",value:function(t){var e=this._formElement.querySelector(".".concat(t.id,"-error"));t.validity.valid?this._hideInputError(e):this._showInputError(e,t.validationMessage)}},{key:"_showInputError",value:function(t,e){t.textContent=e,t.classList.add(this._errorClass)}},{key:"_hideInputError",value:function(t){t.classList.remove(this._errorClass),t.textContent=""}},{key:"_disableSubmitButton",value:function(t,e){t.classList.add(e),t.setAttribute("disabled","disabled")}},{key:"_enableSubmitButton",value:function(t,e){t.classList.remove(e),t.removeAttribute("disabled","disabled")}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput(this._inputs)?this._disableSubmitButton(this._submitButton,this._inactiveButtonClass):this._enableSubmitButton(this._submitButton,this._inactiveButtonClass)}},{key:"_hasInvalidInput",value:function(){return this._inputs.some((function(t){return!t.validity.valid}))}},{key:"resetInputsErrors",value:function(){var t=this;this._toggleButtonState(),this._errorMessages.forEach((function(e){t._hideInputError(e)}))}}])&&o(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function u(t){return u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},u(t)}function l(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==u(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==u(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===u(o)?o:String(o)),n)}var o}var s=function(){function t(e,r){var n=e.items,o=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._items=n,this._renderer=o,this._container=document.querySelector(r)}var e,r;return e=t,(r=[{key:"addItem",value:function(t){this._container.prepend(t)}},{key:"renderItemsFromArray",value:function(){var t=this;this._items.forEach((function(e){t.addItem(t._renderer(e))}))}}])&&l(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function a(t){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},a(t)}function c(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,f(n.key),n)}}function p(t,e,r){return(e=f(e))in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function f(t){var e=function(t,e){if("object"!==a(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==a(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===a(e)?e:String(e)}var y=function(){function t(e){var r=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),p(this,"_handleEscClose",(function(t){"Escape"===t.key&&r.close()})),p(this,"_closePopupByClickOverlay",(function(t){t.target===t.currentTarget&&r.close()})),this._popup=document.querySelector(e),this._popupCloseButton=this._popup.querySelector(".popup__close-button ")}var e,r;return e=t,(r=[{key:"open",value:function(){this._popup.classList.add("popup_visible"),this._popup.addEventListener("mousedown",this._closePopupByClickOverlay),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_visible"),this._popup.removeEventListener("mousedown",this._closePopupByClickOverlay),document.removeEventListener("keydown",this._handleEscClose)}},{key:"setEventListeners",value:function(){this._popupCloseButton.addEventListener("click",this.close.bind(this))}}])&&c(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}();function m(t){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},m(t)}function b(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==m(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==m(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===m(o)?o:String(o)),n)}var o}function v(){return v="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var n=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=_(t)););return t}(t,e);if(n){var o=Object.getOwnPropertyDescriptor(n,e);return o.get?o.get.call(arguments.length<3?t:r):o.value}},v.apply(this,arguments)}function h(t,e){return h=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},h(t,e)}function _(t){return _=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},_(t)}var d=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&h(t,e)}(u,t);var e,r,n,o,i=(n=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=_(n);if(o){var r=_(this).constructor;t=Reflect.construct(e,arguments,r)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===m(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(e=i.call(this,t))._image=e._popup.querySelector(".popup__img"),e._caption=e._popup.querySelector(".popup__place-name-of-big-photo"),e}return e=u,(r=[{key:"open",value:function(t){this._image.src=t.src,this._image.alt=t.alt,this._caption.textContent=t.alt,v(_(u.prototype),"open",this).call(this)}}])&&b(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),u}(y);function g(t){return g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},g(t)}function S(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==g(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==g(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===g(o)?o:String(o)),n)}var o}function w(){return w="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,r){var n=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=E(t)););return t}(t,e);if(n){var o=Object.getOwnPropertyDescriptor(n,e);return o.get?o.get.call(arguments.length<3?t:r):o.value}},w.apply(this,arguments)}function k(t,e){return k=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},k(t,e)}function E(t){return E=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},E(t)}var j=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&k(t,e)}(u,t);var e,r,n,o,i=(n=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=E(n);if(o){var r=E(this).constructor;t=Reflect.construct(e,arguments,r)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===g(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t,e){var r,n=t.submitFunc;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(r=i.call(this,e))._submitFunc=n,r._form=r._popup.querySelector(".popup__form"),r._inputs=r._form.querySelectorAll(".popup__form-item"),r}return e=u,(r=[{key:"_getInputValues",value:function(){var t=this;return this._formValues={},this._inputs=Array.from(this._inputs),this._inputs.forEach((function(e){return t._formValues[e.name]=e.value})),this._formValues}},{key:"setInputValues",value:function(t){this._inputs.forEach((function(e){e.value=t[e.name]}))}},{key:"setEventListeners",value:function(){var t=this;w(E(u.prototype),"setEventListeners",this).call(this),this._SubmitCallback=function(e){e.preventDefault(),t._submitFunc(t._getInputValues.bind(t)()),t.close()},this._form.addEventListener("submit",this._SubmitCallback)}},{key:"close",value:function(){this._form.reset(),w(E(u.prototype),"close",this).call(this)}}])&&S(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),u}(y);function P(t){return P="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},P(t)}function O(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==P(t)||null===t)return t;var r=t[Symbol.toPrimitive];if(void 0!==r){var n=r.call(t,"string");if("object"!==P(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(n.key),"symbol"===P(o)?o:String(o)),n)}var o}var I=function(){function t(e){var r=e.userData;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._userNameField=document.querySelector(r.userNameSelector),this._userProfessionField=document.querySelector(r.userProfessionSelector)}var e,r;return e=t,(r=[{key:"getUserInfo",value:function(){return this._userData={},this._userData.name=this._userNameField.textContent,this._userData.profession=this._userProfessionField.textContent,this._userData}},{key:"setUserInfo",value:function(t){this._userNameField.textContent=t.name,this._userProfessionField.textContent=t.profession}}])&&O(e.prototype,r),Object.defineProperty(e,"prototype",{writable:!1}),t}(),C={formSelector:".popup__form",inputSelector:".popup__form-item",submitButtonSelector:".popup__submit-button",inactiveButtonClass:"popup__submit-button_disabled",errorClass:"popup__form-item-error_visible",inputErrorClass:".popup__form-item-error"},B=document.querySelector(".popup-edit-profile"),L=document.querySelector(".profile__edit-profile-button"),T=B.querySelector(".popup__form_type_edit-profile"),q=document.querySelector(".popup-add-photo"),x=document.querySelector(".profile__add-photo-button"),R=q.querySelector(".popup__form_type_add-photo");function F(t,e){var r={};r.src=t,r.alt=e,D.open(r)}function V(t){return new r(t,".gallery-item-template",F).setCard()}var D=new d(".popup-big-photo");D.setEventListeners();var A=new i(C,R),N=new i(C,T);A.enableValidation(),N.enableValidation();var U=new s({items:[{name:"Архыз",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg"},{name:"Челябинская область",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg"},{name:"Иваново",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg"},{name:"Камчатка",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg"},{name:"Холмогорский район",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg"},{name:"Байкал",link:"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg"}],renderer:V},".gallery__list");U.renderItemsFromArray();var M=new j({submitFunc:function(t){return U.addItem(V(t))}},".popup-add-photo");M.setEventListeners();var G=new j({submitFunc:function(t){z.setUserInfo(t)}},".popup-edit-profile");G.setEventListeners();var z=new I({userData:{userNameSelector:".profile__user-name",userProfessionSelector:".profile__user-profession"}});x.addEventListener("click",(function(t){A.resetInputsErrors(),M.open()})),L.addEventListener("click",(function(){N.resetInputsErrors(),G.setInputValues(z.getUserInfo()),G.open()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,